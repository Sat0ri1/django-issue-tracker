name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DJANGO_SETTINGS_MODULE: config.settings
      UV_CACHE_DIR: ${{ github.workspace }}/.cache/uv  # relative UV cache path

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    # Restore UV cache
    - name: Restore UV cache
      uses: actions/cache@v4
      with:
        path: ${{ env.UV_CACHE_DIR }}
        key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
        restore-keys: |
          uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          uv-${{ runner.os }}

    # Install uv and Python
    - name: Install uv and Python
      uses: astral-sh/setup-uv@v6
      with:
        python-version: 3.11
        enable-cache: true   # optional extra caching handled by action

    # Sync project (installs dependencies)
    - name: Install project dependencies
      run: uv sync --locked --all-extras --dev

    # Run linting
    - name: Run Ruff (lint)
      run: uv run ruff check issues

    # Run type checking
    - name: Run Mypy
      run: uv run mypy issues --ignore-missing-imports

    # Run Django unit tests
    - name: Run Django tests
      run: uv run pytest

    # Install Playwright browsers (cached)
    - name: Install Playwright browsers
      run: uv run playwright install

    # Run Playwright E2E tests
    - name: Run Playwright tests
      run: uv run pytest --maxfail=1 --disable-warnings --tb=short tests/e2e

    # Minimize UV cache at the end of job
    - name: Prune UV cache
      if: always()
      run: uv cache prune --ci
